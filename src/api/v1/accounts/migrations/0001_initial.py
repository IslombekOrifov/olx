# Generated by Django 3.2 on 2023-02-13 10:06

import api.v1.accounts.managers
import api.v1.accounts.services
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=13, validators=[django.core.validators.RegexValidator(message='Raqam 13 ta belgidan iborat bolishi kerak. P.s: +998912345678', regex='^+998\\d{9}$')])),
                ('balance', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('about', models.CharField(blank=True, max_length=255)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=api.v1.accounts.services.upload_avatar_path)),
                ('other_skills', models.CharField(blank=True, max_length=300)),
                ('hobby', models.CharField(blank=True, max_length=300)),
                ('resume', models.FileField(blank=True, null=True, upload_to=api.v1.accounts.services.upload_resume_path)),
                ('edu1_name', models.CharField(blank=True, max_length=250)),
                ('edu1_direction', models.CharField(blank=True, max_length=150)),
                ('edu1_start_date', models.DateField(blank=True, null=True)),
                ('edu1_end_date', models.DateField(blank=True, null=True)),
                ('edu1_now', models.BooleanField(default=False)),
                ('edu2_name', models.CharField(blank=True, max_length=250)),
                ('edu2_direction', models.CharField(blank=True, max_length=150)),
                ('edu2_start_date', models.DateField(blank=True, null=True)),
                ('edu2_end_date', models.DateField(blank=True, null=True)),
                ('edu2_now', models.BooleanField(default=False)),
                ('licence_category', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D'), ('b_e', 'B+E'), ('c_e', 'C+E'), ('d_e', 'D+E'), ('yoq', 'YOQ')], max_length=3)),
                ('is_deleted', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', api.v1.accounts.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', multiselectfield.db.fields.MultiSelectField(choices=[('ar', 'Arab tili'), ('en', 'Ingliz tili'), ('ru', 'Rus tili'), ('uz', "O'zbek tili")], max_length=3)),
                ('level', models.CharField(choices=[('il', "Ilg'or"), ('bo', "Boshlang'ich"), ('er', 'Erkin'), ('oa', "O'rta")], max_length=3)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=150)),
                ('company', models.CharField(max_length=150)),
                ('work_start_date', models.DateField()),
                ('work_end_date', models.DateField(blank=True, null=True)),
                ('work_now', models.BooleanField(default=False)),
                ('work_duties', models.CharField(blank=True, max_length=500)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
